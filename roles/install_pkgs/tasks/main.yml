---
# tasks file for pull-pkgs
- name: mkdir  pkg-dir
  file:
    path: "{{ install_pkgs_temp_dir }}"
    state: directory

- name: Install podman on localhost
  yum:
    name: podman
    state: latest

- name: Pull the pkg container image
  podman_image:
    name: "{{ install_pkgs_image_name }}"
    tag: "{{ install_pkgs_image_tag }}"

- name: Remove a k8s-pkg container if it already running
  containers.podman.podman_container:
    name: "{{ install_pkgs_container_name }}"
    state: absent

- name: Run k8s-pkg container
  containers.podman.podman_container:
    name: "{{ install_pkgs_container_name }}"
    state: present
    image: "{{ install_pkgs_image_name }}:{{ install_pkgs_image_tag }}"

- name: Copy all the packages from pkg container
  shell: podman cp "{{ install_pkgs_container_name }}":/root/{{ install_pkg_k8s_cmd }} "{{ install_pkgs_temp_dir }}"

- name: Stop k8s-pkg container
  containers.podman.podman_container:
    name: "{{ install_pkgs_container_name }}"
    state: stopped

- name: Install crio
  yum:
    name: cri-o
    state: latest

- name: Install k8s command package
  unarchive:
    src: "{{ install_pkgs_temp_dir }}/{{ install_pkg_k8s_cmd }}"
    dest: /usr/bin
    remote_src: yes

- name: Ensure systemd directory exits
  file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory

- name: Install kubelet file
  copy:
    src: kubelet.service
    dest: /etc/systemd/system/

- name: Install kubelet dropin file
  copy:
    src: 10-kubeadm.conf
    dest: /etc/systemd/system/kubelet.service.d

- name: Ensure systemd daemon reloaded
  systemd: 
    daemon_reload: true

- name: Ensure crio and kubelet service enabled and started
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - crio
    - kubelet
