---
# tasks file for sysinit
- name: Set up host name
  template:
    src: hostname.j2
    dest: /etc/hostname
    force: yes

- name: Install hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    force: yes

- name: Make sure br_netfilter and overlay module is loaded after reboot
  copy:
    src: k8s.conf
    dest: /etc/modules-load.d/k8s.conf
    force: yes

- name: Ensure br_netfilter and overlay module is loaded now
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Disable SELINUX
  selinux:
    state: disabled

- name: Setup kernel param
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_file: /etc/sysctl.d/10-k8s.conf
    state: present
  loop:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward

- name: Disable firewall
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: mkdir  temp_dir
  file:
    path: "{{ sysinit_temp_dir }}"
    state: directory

- name: Install required packages
  yum:
    name: 
      - podman
      - conntrack-tools
      - socat
      - iproute-tc
      - vim 
      - bash-completion
    state: latest

- name: Pull the pkg container image
  podman_image:
    name: "{{ sysinit_image_name }}"
    tag: "{{ sysinit_image_tag }}"

- name: Remove a k8s-pkg container if it already running
  containers.podman.podman_container:
    name: "{{ sysinit_container_name }}"
    state: absent

- name: Run k8s-pkg container
  containers.podman.podman_container:
    name: "{{ sysinit_container_name }}"
    state: present
    image: "{{ sysinit_image_name }}:{{ sysinit_image_tag }}"

- name: Copy k8s packages from pkg container
  shell: podman cp "{{ sysinit_container_name }}":/root/{{ sysinit_k8s_cmd }} "{{ sysinit_temp_dir }}"

- name: Copy cri-o packages from pkg container
  shell: podman cp "{{ sysinit_container_name }}":/root/{{ sysinit_crio_pkg }} "{{ sysinit_temp_dir }}"

- name: Stop k8s-pkg container
  containers.podman.podman_container:
    name: "{{ sysinit_container_name }}"
    state: stopped

- name: Install kubeadm kubectl kubelet crictl package
  unarchive:
    src: "{{ sysinit_temp_dir }}/{{ sysinit_k8s_cmd }}"
    dest: /usr/bin
    remote_src: yes

- name: Unarchive cri-o package
  unarchive:
    src: "{{ sysinit_temp_dir }}/{{ sysinit_crio_pkg }}"
    dest: "{{ sysinit_temp_dir }}"
    remote_src: yes

- name: Install cri-o
  shell: ./install
  args:
    chdir: "{{ sysinit_temp_dir }}/cri-o"

- name: Ensure crio can pull pause image
  lineinfile:
    line: "pause_image = \"docker.io/marktoay/pause:3.7\""
    path: /etc/crio/crio.conf

- name: Ensure systemd directory exits
  file:
    path: /etc/systemd/system/kubelet.service.d
    state: directory

- name: Install kubelet file
  copy:
    src: kubelet.service
    dest: /etc/systemd/system/

- name: Install kubelet dropin file
  copy:
    src: 10-kubeadm.conf
    dest: /etc/systemd/system/kubelet.service.d

- name: Ensure systemd daemon reloaded
  systemd: 
    daemon_reload: true

- name: Ensure crio and kubelet service enabled and started
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - crio
    - kubelet

- name: Reboot machine
  reboot:
